[
["index.html", "Process Mining 101 a gentle introduction Welcome Disclaimers What this book is What this book is not Contact", " Process Mining 101 a gentle introduction Phil Walker Last updated: 2020-04-09 Welcome I have been working to grow my knowledge and skills around process mining and in an effort to not only work to better capture what I am learn but also build out a place to help others: I am going to be documenting and building out examples in the subsequent pages of this book. My aim is that this can become a useful resource for not only useful me but also future team members as we work to make sense of the processes around us. I will try to reduce the use of overly technical terminology without also providing application focused translations. I expect that this will probably end up helping my significantly because I don’t want this to be an activity in rote memorization. I want to better be able to interact with experts within the fields as questions arise, so I will work to capture specific terms. But I will also work on building out a glossary to consolidate those terms in a single location. I often find that I learn best when I have a concrete example that I can use to ground myself. I will work to make sure the data I use is readily available/recreateble (also will be good for me in better learning to create reprex). There are many different tools available when performing process mining analyses, but the one we will largely focus on one which exists within the R ecosystem. It is called bupaR (Business Process Analysis in R) and the documentation site for that package and the rest of the ‘-verse’ can be found at http://bupar.net/ Some of the other tools are mentioned in the literature section. Disclaimers I am not a process mining expert nor a researcher. In fact, I am still very new as a user of process mining methodologies. I do find this material to be useful and fun and on top of that I am always looking to grow and learn new things so I expect this book to grow with my understanding. I cannot certify that the entirety of the content contained here will be accurate, but I will make every effort to keep this as updated as possible and will look to cite my sources as I use them. What this book is This book is an attempt to provide a useful synthesis of both the theoretical and practical usages of process mining in the R ecosystem. I will aim to use examples as much as possible to show how an idea could be applied (and to help myself practice as well). What this book is not I will not be able to capture the entire field of process mining nor every use. I also do not intend on providing more explanations around other R packages I will be using throughout the book. That likely includes a fair amount of data cleaning or aggregation that is done utilizing the packages within the tidyverse. Contact Please feel free to reach out to me if you have any questions or have found any errors (grammatical or theoretical). I am planning on trying to keep this as up to date as possible and would love to hear from you. My contact information can be found at the top right of the document and I can be reached via twitter or linkedin. Best, -phil "],
["intro.html", "Chapter 1 Introduction 1.1 What does the current space look like 1.2 What is process mining? 1.3 What is an event log? 1.4 What can we do with it? 1.5 Why should we care", " Chapter 1 Introduction A quickly growing field that is at least data science adjacent is that of process mining (sometimes called business process analytics) In this section I aim to cover the following items So what is process mining? What can we do with it? Why do we care about it? 1.1 What does the current space look like Unsurprisedly there are both open source and commercial solutions available for assisting in the investigation and analysis of processes. Examples of use of process mining analyzing treatment process in hospitals improving customer services process in a multinational corporation understanding browsing behavior of customers on a online booking site analyzing failures of a baggage handling system 1.1.1 Process Sciences // Process Mining // Process Models Process mining research starting at TU/e (Eindhoven University of Technology) in 1999 In general the field is tied to the growth in big data &gt;&gt; automated creation of event logs Answering questions like: what are the most frequent paths in my process? Do they change over time? what do the cases that take longer than 3 months have in common? where are the bottlenecks causing these delays? which cases deviate from the reference process? do these deviations also cause delays? Generally are either performance or conformance related questions performance: response times, service levels 1.2 What is process mining? 1.3 What is an event log? what is “event data” contains a couple of key elements * activity: well defined step in a process (often an event in a event log) * case: process instance * trace: the combination of activities into cases (multiple traces make up the process flow) * resource: person/device executing the activity * timestamp: crucial element of event logs couple of useful but not necessary elements 1.4 What can we do with it? understand complicated views visualize flow rather than just focusing on the static intersections library(processanimateR) library(eventdataR) library(bupaR) summary(patients) ## Number of events: 5442 ## Number of cases: 500 ## Number of traces: 7 ## Number of distinct activities: 7 ## Average trace length: 10.884 ## ## Start eventlog: 2017-01-02 11:41:53 ## End eventlog: 2018-05-05 07:16:02 ## handling patient employee handling_id ## Blood test : 474 Length:5442 r1:1000 Length:5442 ## Check-out : 984 Class :character r2:1000 Class :character ## Discuss Results : 990 Mode :character r3: 474 Mode :character ## MRI SCAN : 472 r4: 472 ## Registration :1000 r5: 522 ## Triage and Assessment:1000 r6: 990 ## X-Ray : 522 r7: 984 ## registration_type time .order ## complete:2721 Min. :2017-01-02 11:41:53 Min. : 1 ## start :2721 1st Qu.:2017-05-06 17:15:18 1st Qu.:1361 ## Median :2017-09-08 04:16:50 Median :2722 ## Mean :2017-09-02 20:52:34 Mean :2722 ## 3rd Qu.:2017-12-22 15:44:11 3rd Qu.:4082 ## Max. :2018-05-05 07:16:02 Max. :5442 ## # animate_process(patients, mode = &quot;relative&quot;, jitter = 10, legend = &quot;color&quot;, # mapping = token_aes(color = token_scale(&quot;employee&quot;, # scale = &quot;ordinal&quot;, # range = RColorBrewer::brewer.pal(7, &quot;Paired&quot;)))) library(processanimateR) library(tidyverse) library(bupaR) # Extract only the lacticacid measurements lactic &lt;- sepsis %&gt;% mutate(lacticacid = as.numeric(lacticacid)) %&gt;% filter_activity(c(&quot;LacticAcid&quot;)) %&gt;% as.data.frame() %&gt;% select(&quot;case&quot; = case_id, &quot;time&quot; = timestamp, value = lacticacid) # format needs to be &#39;case,time,value&#39; # Remove the measurement events from the sepsis log sepsisBase &lt;- sepsis %&gt;% filter_activity(c(&quot;LacticAcid&quot;, &quot;CRP&quot;, &quot;Leucocytes&quot;, &quot;Return ER&quot;, &quot;IV Liquid&quot;, &quot;IV Antibiotics&quot;), reverse = T) %&gt;% filter_trace_frequency(percentage = 0.95) # Animate with the secondary data frame `lactic` animate_process(sepsisBase, mode = &quot;relative&quot;, duration = 300, legend = &quot;color&quot;, mapping = token_aes(color = token_scale(lactic, scale = &quot;linear&quot;, range = c(&quot;#fff5eb&quot;,&quot;#7f2704&quot;)))) 1.5 Why should we care "],
["foundations.html", "Chapter 2 Foundational Elements 2.1 process model types 2.2 process discovery algorithms", " Chapter 2 Foundational Elements In this sections we will look to cover the essential pieces necessary to learning process mining 2.1 process model types 2.1.1 transition systems consists of states and transitions also called a labelled transition system which is a tuple (finite list of ordered elements) typical uses of labels include representing input expected, conditions that must be true to trigger the transition/actions performed during the transition, then the end state a path terminates successfully if it ends in one of the final states a path deadlocks if it reaches a non-final state without any outgoing transitions transition systems are simple but have problems expressing concurrency succinctly * example of n parallel activities: * there are n! possible execution sequences * the transition system requires 2^n states and n X 2^(n-1) to be able to capture this (often this is called state explosion) * ie if there 10 parallel activities: * 10! = 3,628,800 possible execution sequences * 2^10 = 1024 reachable states * 10x2^(10-1) = 5120 transitions on the other hand a petri net needs only 10 transitions and 10 places to model the 10 parallel activities while transition systems are foundational, with the concurrent nation of business processes, more expressive models like petri nets are needed to adequately represent process mining results. 2.1.2 petri net usage of tokens transitions: must be enabled for a action to occur (also called firing) marking &gt;&gt; state of the transaction contains places (represented as circle) and transitions (represented as a square) and may be connected with places symbolize states/conditions/resources that need to be met/available before an action can be carried out transitions symbolize actions often we say that one transition fires at a time there are only “AND” (split/join) and “XOR” (split/join) a transition is represented as a “box” within a petri net model often reachability and coverability graphs are created to help show how items move… often they get too big and complicated with “real-life” processes if there are ‘n’ components then the reachability graph has size 2^n k-bounded: the max number of tokens any state could contain safe: a marked petri net is safe it and only iff it is 1-bounded (ie no place holds more than 1 token) 2.1.3 BPMN models (Business Process Management) there are many different process modeling languages transition systems, petri nets, BPMN, C-nets, EPCs, YAWL BPMN model, BPEL model, UML activity diagram Workflow Pattern Initiatives 2.2 process discovery algorithms 2.2.1 alpha algorithms builds out a petri net from the event log "],
["methods.html", "Chapter 3 Methods 3.1 How to install bupaR", " Chapter 3 Methods We describe our methods in this chapter. This could show the different tools that are available or even some examples 3.1 How to install bupaR The following code should be run initally to install the install.packages(&quot;bupaR&quot;) install.packages(&quot;edeaR&quot;) install.packages(&quot;eventdataR&quot;) install.packages(&quot;processmapR&quot;) install.packages(&quot;processanimateR&quot;) install.packages(&quot;petrinetR&quot;) install.packages(&quot;processmonitR&quot;) install.packages(&quot;processcheckR&quot;) "],
["apps.html", "Chapter 4 Applications", " Chapter 4 Applications In this section we are going to try to cover some more detail around what tools are currently available focusing on the open source tools "],
["final-words.html", "Chapter 5 Final Words", " Chapter 5 Final Words We have finished a nice book. "],
["refs.html", "A References", " A References # automatically create a bib database for R packages knitr::write_bib(c( .packages(), &#39;bookdown&#39;, &#39;knitr&#39;, &#39;rmarkdown&#39;, &#39;bupaR&#39; ), &#39;packages.bib&#39;) "],
["def.html", "B Defintions B.1 Useful terminology B.2 Process Mining B.3 Process Mapping", " B Defintions In this section we aim to compile useful defintions to ensure that we have similar language tools B.1 Useful terminology B.1.1 describing a process deadlock: a path deadlocks if it reaches a non-final state without any outgoing transitions livelock: some transitions are still enabled but it is impossible to reach one of the final states concurancy desire line/ golden path activity: well defined step in a process (often an event in a event log) case: process instance trace: the combination of activities into cases (multiple traces make up the process flow) resource: person/device executing the activity timestamp: crucial element of event logs B.2 Process Mining B.3 Process Mapping "],
["lit.html", "C Literature", " C Literature Here is a review of existing methods. Process Mining &gt;&gt; [http://processmining.org/] ProM &gt;&gt; [http://www.promtools.org/doku.php] Coursera process mining &gt;&gt; [https://www.coursera.org/learn/process-mining] The book used heavily for reference: "]
]
